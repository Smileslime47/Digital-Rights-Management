package moe._47saikyo.contract;

import java.math.BigInteger;
import java.util.Arrays;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.5.2.
 */
@SuppressWarnings("rawtypes")
public class License extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b50604051610e05380380610e0583398101604081905261002f91610196565b600180546001600160a01b0319166001600160a01b038716179055600361005685826102c5565b50600480546001600160401b0384811668010000000000000000026001600160801b03199092169086161717905560056100908180610384565b5050600280546001600160a01b0319908116331790915560008054909116301790555061045e92505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126100e357600080fd5b81516001600160401b03808211156100fd576100fd6100bc565b604051601f8301601f19908116603f01168101908282118183101715610125576101256100bc565b816040528381526020925086602085880101111561014257600080fd5b600091505b838210156101645785820183015181830184015290820190610147565b6000602085830101528094505050505092915050565b80516001600160401b038116811461019157600080fd5b919050565b600080600080600060a086880312156101ae57600080fd5b85516001600160a01b03811681146101c557600080fd5b60208701519095506001600160401b03808211156101e257600080fd5b6101ee89838a016100d2565b95506101fc6040890161017a565b945061020a6060890161017a565b9350608088015191508082111561022057600080fd5b5061022d888289016100d2565b9150509295509295909350565b600181811c9082168061024e57607f821691505b60208210810361026e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102c0576000816000526020600020601f850160051c8101602086101561029d5750805b601f850160051c820191505b818110156102bc578281556001016102a9565b5050505b505050565b81516001600160401b038111156102de576102de6100bc565b6102f2816102ec845461023a565b84610274565b602080601f831160018114610327576000841561030f5750858301515b600019600386901b1c1916600185901b1785556102bc565b600085815260208120601f198616915b8281101561035657888601518255948401946001909101908401610337565b50858210156103745787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81810361038f575050565b610399825461023a565b6001600160401b038111156103b0576103b06100bc565b6103be816102ec845461023a565b6000601f8211600181146103f257600083156103da5750848201545b600019600385901b1c1916600184901b178455610457565b600085815260209020601f19841690600086815260209020845b8381101561042c578286015482556001958601959091019060200161040c565b508583101561044a5781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b6109988061046d6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806382678dd61461003b578063bc8018b114610059575b600080fd5b610043610061565b6040516100509190610559565b60405180910390f35b610043610071565b606061006c30610231565b905090565b6040805180820190915260018152607b60f81b60208201526000546060919081906100a4906001600160a01b0316610231565b6040516020016100b592919061058c565b60408051601f1981840301815291905260015490915081906100df906001600160a01b0316610231565b6040516020016100f09291906105de565b60408051601f19818403018152919052600254909150819061011a906001600160a01b0316610231565b60405160200161012b929190610631565b6040516020818303038152906040529050806003604051602001610150929190610724565b60408051601f19818403018152919052600454909150819061017b9067ffffffffffffffff16610412565b60405160200161018c92919061076a565b60408051808303601f1901815291905260045490915081906101c39068010000000000000000900467ffffffffffffffff16610412565b6040516020016101d49291906107c1565b60405160208183030381529060405290508060056040516020016101f9929190610819565b60405160208183030381529060405290508060405160200161021b9190610864565b60408051601f1981840301815291905292915050565b604080518082018252601081526f181899199a1a9b1b9c1cb0b131b232b360811b60208201528151602a80825260608281019094526001600160a01b0385169291600091602082018180368337019050509050600360fc1b8160008151811061029c5761029c61089f565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106102cb576102cb61089f565b60200101906001600160f81b031916908160001a90535060005b601481101561040957826004856102fd84600c6108cb565b6020811061030d5761030d61089f565b1a60f81b6001600160f81b031916901c60f81c60ff16815181106103335761033361089f565b01602001516001600160f81b0319168261034e8360026108e4565b6103599060026108cb565b815181106103695761036961089f565b60200101906001600160f81b031916908160001a905350828461038d83600c6108cb565b6020811061039d5761039d61089f565b825191901a600f169081106103b4576103b461089f565b01602001516001600160f81b031916826103cf8360026108e4565b6103da9060036108cb565b815181106103ea576103ea61089f565b60200101906001600160f81b031916908160001a9053506001016102e5565b50949350505050565b6060816000036104395750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610463578061044d816108fb565b915061045c9050600a83610914565b915061043d565b60008167ffffffffffffffff81111561047e5761047e610889565b6040519080825280601f01601f1916602001820160405280156104a8576020820181803683370190505b509050815b8515610409576104be600182610936565b905060006104cd600a88610914565b6104d890600a6108e4565b6104e29088610936565b6104ed906030610949565b905060008160f81b90508084848151811061050a5761050a61089f565b60200101906001600160f81b031916908160001a90535061052c600a89610914565b975050506104ad565b60005b83811015610550578181015183820152602001610538565b50506000910152565b6020815260008251806020840152610578816040850160208701610535565b601f01601f19169190910160400192915050565b6000835161059e818460208801610535565b671130b23239111d1160c11b90830190815283516105c3816008840160208801610535565b61088b60f21b60089290910191820152600a01949350505050565b600083516105f0818460208801610535565b68113934b3b43a111d1160b91b9083019081528351610616816009840160208801610535565b61088b60f21b60099290910191820152600b01949350505050565b60008351610643818460208801610535565b6b113232b83637bcb2b9111d1160a11b908301908152835161066c81600c840160208801610535565b61088b60f21b600c9290910191820152600e01949350505050565b8054600090600181811c90808316806106a157607f831692505b602080841082036106c257634e487b7160e01b600052602260045260246000fd5b8180156106d657600181146106eb57610718565b60ff1986168952841515850289019650610718565b60008881526020902060005b868110156107105781548b8201529085019083016106f7565b505084890196505b50505050505092915050565b60008351610736818460208801610535565b681137bbb732b9111d1160b91b9083019081526107566009820185610687565b61088b60f21b815260020195945050505050565b6000835161077c818460208801610535565b6c1134b9b9bab2aa34b6b2911d1160991b90830190815283516107a681600d840160208801610535565b61088b60f21b600d9290910191820152600f01949350505050565b600083516107d3818460208801610535565b6d1132bc3834b932aa34b6b2911d1160911b90830190815283516107fe81600e840160208801610535565b61088b60f21b600e9290910191820152601001949350505050565b6000835161082b818460208801610535565b6e113232b9b1b934b83a34b7b7111d1160891b908301908152610851600f820185610687565b601160f91b815260010195945050505050565b60008251610876818460208701610535565b607d60f81b920191825250600101919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156108de576108de6108b5565b92915050565b80820281158282048414176108de576108de6108b5565b60006001820161090d5761090d6108b5565b5060010190565b60008261093157634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156108de576108de6108b5565b60ff81811683821601908111156108de576108de6108b556fea2646970667358221220099709d706a81a388a1e5997919a6f2e96e3787d4ae0b3bb171f84e49bd49a2264736f6c63430008190033";

    public static final String FUNC_GETKEY = "getKey";

    public static final String FUNC_SERIALIZE = "serialize";

    @Deprecated
    protected License(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected License(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected License(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected License(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<String> getKey() {
        final Function function = new Function(FUNC_GETKEY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> serialize() {
        final Function function = new Function(FUNC_SERIALIZE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    @Deprecated
    public static License load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new License(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static License load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new License(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static License load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new License(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static License load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new License(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<License> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _right, String _owner, BigInteger _issueTime, BigInteger _expireTime, String _description) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _right), 
                new org.web3j.abi.datatypes.Utf8String(_owner), 
                new org.web3j.abi.datatypes.generated.Uint64(_issueTime), 
                new org.web3j.abi.datatypes.generated.Uint64(_expireTime), 
                new org.web3j.abi.datatypes.Utf8String(_description)));
        return deployRemoteCall(License.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<License> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _right, String _owner, BigInteger _issueTime, BigInteger _expireTime, String _description) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _right), 
                new org.web3j.abi.datatypes.Utf8String(_owner), 
                new org.web3j.abi.datatypes.generated.Uint64(_issueTime), 
                new org.web3j.abi.datatypes.generated.Uint64(_expireTime), 
                new org.web3j.abi.datatypes.Utf8String(_description)));
        return deployRemoteCall(License.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<License> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _right, String _owner, BigInteger _issueTime, BigInteger _expireTime, String _description) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _right), 
                new org.web3j.abi.datatypes.Utf8String(_owner), 
                new org.web3j.abi.datatypes.generated.Uint64(_issueTime), 
                new org.web3j.abi.datatypes.generated.Uint64(_expireTime), 
                new org.web3j.abi.datatypes.Utf8String(_description)));
        return deployRemoteCall(License.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<License> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _right, String _owner, BigInteger _issueTime, BigInteger _expireTime, String _description) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _right), 
                new org.web3j.abi.datatypes.Utf8String(_owner), 
                new org.web3j.abi.datatypes.generated.Uint64(_issueTime), 
                new org.web3j.abi.datatypes.generated.Uint64(_expireTime), 
                new org.web3j.abi.datatypes.Utf8String(_description)));
        return deployRemoteCall(License.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
